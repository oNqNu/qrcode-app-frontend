import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";

import { useForm } from "react-hook-form";
import {
  Heading,
  Flex,
  FormLabel,
  FormControl,
  Input,
  Button,
  Center,
} from "@chakra-ui/react";

const Home: NextPage = () => {
  const {
    handleSubmit,
    register,
    formState: { errors, isSubmitting },
  } = useForm();

  function onSubmit() {
    console.log("test");
  }
  return (
    <div>
      <Head>
        <title>Design QRcode Generator</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Flex flexDirection={"column"} alignItems={"center"} py={"12"}>
        <Heading size={"3xl"}>Design QRcode Generator</Heading>

        <p>デザインQRコードを生成するアプリです</p>

        <form onSubmit={handleSubmit(onSubmit)}>
          <FormControl isInvalid={true}>
            <FormLabel htmlFor="name">パラメータ1</FormLabel>
            <Input
              id="name"
              placeholder="name"
              {...register("name", {
                required: "This is required",
                minLength: { value: 4, message: "Minimum length should be 4" },
              })}
            />
          </FormControl>
          <FormControl isInvalid={true}>
            <FormLabel htmlFor="name">パラメータ2</FormLabel>
            <Input
              id="name"
              placeholder="name"
              {...register("name", {
                required: "This is required",
                minLength: { value: 4, message: "Minimum length should be 4" },
              })}
            />
          </FormControl>
          <FormControl isInvalid={true}>
            <FormLabel htmlFor="name">パラメータ3</FormLabel>
            <Input
              id="name"
              placeholder="name"
              {...register("name", {
                required: "This is required",
                minLength: { value: 4, message: "Minimum length should be 4" },
              })}
            />
          </FormControl>
          <FormControl isInvalid={true}>
            <FormLabel htmlFor="name">パラメータ4</FormLabel>
            <Input
              id="name"
              placeholder="name"
              {...register("name", {
                required: "This is required",
                minLength: { value: 4, message: "Minimum length should be 4" },
              })}
            />
          </FormControl>
          <Button
            mt={4}
            colorScheme="teal"
            isLoading={isSubmitting}
            type="submit"
          >
            Submit
          </Button>
        </form>
      </Flex>
    </div>
  );
};

export default Home;
