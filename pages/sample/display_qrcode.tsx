/* eslint-disable @next/next/no-img-element */
import type { NextPage } from 'next';
import Image from 'next/image';
// import { Image as NextImage } from 'next/image';
import Head from 'next/head';
import axios from 'axios';
import { useForm } from 'react-hook-form';
import ReactCrop, { Crop } from 'react-image-crop';
import 'react-image-crop/dist/ReactCrop.css';
import {
  chakra,
  Heading,
  Text,
  Flex,
  FormLabel,
  FormControl,
  Input,
  Button,
  Center,
} from '@chakra-ui/react';
import { useState } from 'react';
import { BiDownload } from 'react-icons/bi';

const DisplayQrcode: NextPage = () => {
  const [imgStr, setImgStr] = useState('');
  const [fullimgStr, setFullImgStr] = useState('');
  const [isgeneratedQrcode, setIsgeneratedQrcode] = useState(false);

  async function handleOnClick() {
    console.log('clickled button');
    try {
      const response = await axios.get(
        'https://design-qrcode-api.herokuapp.com/api/get_test'
      );
      setImgStr(response.data.qrcode_base64);
      setFullImgStr(response.data.output_base64);
      setIsgeneratedQrcode(true);
      console.log(response.data);
    } catch (error) {
      console.error(error);
    }
  }

  return (
    <div>
      <Head>
        <title>Design QRcode Generator</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Flex flexDirection={'column'} alignItems={'center'} py={'12'}>
        <Heading size={'3xl'}>Design QRcode Generator</Heading>

        <Text fontSize={'2xl'} pt={'4'}>
          デザインQRコード表示サンプル
        </Text>
        {isgeneratedQrcode ? (
          <>
            <Text fontSize={'2xl'} pt={'4'} fontWeight="bold">
              QRコード化した部分
            </Text>
            <img
              src={`data:image/jpeg;base64,${imgStr}`}
              alt="デザインQRコード"
            />
            <Flex gap={12}>
              <Button
                onClick={() => {
                  setIsgeneratedQrcode(false);
                  setImgStr('');
                }}
                colorScheme="blue"
                mt="4"
              >
                やり直す
              </Button>
              <Button
                as="a"
                href={`data:image/jpeg;base64,${imgStr}`}
                download
                bgColor="green.500"
                color="white"
                mt="4"
                mr="4"
                _hover={{
                  color: 'blue.500',
                  bgColor: 'white',
                  border: '1px',
                  borderColor: 'blue.500',
                }}
              >
                <BiDownload size="30px" />
              </Button>
            </Flex>

            <Text fontSize={'2xl'} pt={'4'} fontWeight="bold">
              背景画像全体
            </Text>
            <img
              src={`data:image/jpeg;base64,${fullimgStr}`}
              alt="デザインQRコード"
            />
            <Flex gap={12}>
              <Button
                onClick={() => {
                  setIsgeneratedQrcode(false);
                  setImgStr('');
                }}
                colorScheme="blue"
                mt="4"
              >
                やり直す
              </Button>
              <Button
                as="a"
                href={`data:image/jpeg;base64,${fullimgStr}`}
                download
                bgColor="green.500"
                color="white"
                mt="4"
                mr="4"
                _hover={{
                  color: 'blue.500',
                  bgColor: 'white',
                  border: '1px',
                  borderColor: 'blue.500',
                }}
              >
                <BiDownload size="30px" />
              </Button>
            </Flex>
          </>
        ) : (
          <Button
            onClick={() => {
              handleOnClick();
            }}
            colorScheme="blue"
            mt="4"
          >
            QRコード作成
          </Button>
        )}
      </Flex>
    </div>
  );
};

export default DisplayQrcode;
