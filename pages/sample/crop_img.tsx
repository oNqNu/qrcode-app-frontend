/* eslint-disable @next/next/no-img-element */
import type { NextPage } from 'next';
import Image from 'next/image';
// import { Image as NextImage } from 'next/image';
import Head from 'next/head';
import axios from 'axios';
import { useForm } from 'react-hook-form';
import ReactCrop, { Crop } from 'react-image-crop';
import 'react-image-crop/dist/ReactCrop.css';
import {
  chakra,
  Heading,
  Text,
  Flex,
  FormLabel,
  FormControl,
  Input,
  Button,
  Center,
} from '@chakra-ui/react';
import { useState } from 'react';
import { BiDownload } from 'react-icons/bi';

const CropImg: NextPage = () => {
  const [imgStr, setImgStr] = useState('');
  const [isgeneratedQrcode, setIsgeneratedQrcode] = useState(false);
  const [crop, setCrop] = useState<Crop>({
    unit: 'px', // Can be 'px' or '%'
    x: 25,
    y: 25,
    width: 50,
    height: 50,
  });

  async function handleOnClick() {
    console.log('clickled button');
    try {
      const response = await axios.get(
        'https://design-qrcode-api.herokuapp.com/api/get_sample'
      );
      setImgStr(response.data);
      setIsgeneratedQrcode(true);
      console.log(response.data);
    } catch (error) {
      console.error(error);
    }
  }

  return (
    <div>
      <Head>
        <title>Design QRcode Generator</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Flex flexDirection={'column'} alignItems={'center'} py={'12'}>
        <Heading size={'3xl'}>Design QRcode Generator</Heading>
        <Text fontSize={'2xl'} pt={'4'}>
          画像切り抜き処理サンプル
        </Text>
        <ReactCrop
          crop={crop}
          aspect={1}
          onChange={(c) => {
            setCrop(c);
            console.log(crop);
          }}
        >
          <img id="crop" src="/abe.jpg" alt="切り抜き前画像" />
        </ReactCrop>
      </Flex>
    </div>
  );
};

export default CropImg;
